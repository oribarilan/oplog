name: Code Coverage Check

on: [push, pull_request]

env:
  GLOBAL_COVERAGE_THRESHOLD: 91
  SINGLE_COVERAGE_THRESHOLD: 90

jobs:
  coverage-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install -r requirements-dev.txt

      - name: Create coverage report
        run: |
          coverage run --omit 'oplog/tests/*','*/__pycache__/*' -m pytest
          coverage xml -o coverage.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./coverage.xml
        
      - name: Run Global Code Coverage
        run: |
          coverage report -m --fail-under=$GLOBAL_COVERAGE_THRESHOLD

      - name: Check coverage per file
        run: |
          if [ -f coverage.xml ]; then
            python -c "
            import xml.etree.ElementTree as ET
      
            tree = ET.parse('coverage.xml')
            root = tree.getroot()
      
            failed_files = []
      
            for class_element in root.findall('.//class[@filename]'):
                filename = class_element.get('filename')
                lines = float(class_element.find('lines').get('percent'))
                if lines < $SINGLE_COVERAGE_THRESHOLD:  # Individual threshold per file (adjust as needed)
                    failed_files.append((filename, lines))
      
            if failed_files:
                print('The following files have coverage below the threshold:')
                for filename, lines in failed_files:
                    print(f'- {filename}: {lines}%')
                exit(1)
            " || true
          else
            echo "Coverage report not found, failing the workflow"
            exit 1
          fi
        shell: bash
        